name: React Docker CI/CD

on:
  push:
    branches: [ main ]

jobs:
  docker-deploy:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3️⃣ Validate Docker secrets
      - name: Validate Docker secrets
        run: |
          if [ -z "${DOCKER_USERNAME}" ]; then
            echo "ERROR: DOCKER_USERNAME secret is missing"
            exit 1
          fi
          if [ -z "${DOCKER_PASSWORD}" ]; then
            echo "ERROR: DOCKER_PASSWORD secret is missing"
            exit 1
          fi

      # 4️⃣ Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      # 5️⃣ Build & push Docker image
      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_USERNAME }}/react-frontend-app:latest
            ${{ env.DOCKER_USERNAME }}/react-frontend-app:${{ github.run_number }}
          platforms: linux/amd64
          cache-from: type=registry,ref=${{ env.DOCKER_USERNAME }}/react-frontend-app:cache
          cache-to: type=inline

      - name: Confirm successful push
        run: echo "✅ Docker image pushed to Docker Hub successfully!"

      # 6️⃣ Terraform setup
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve

      # 7️⃣ SSH into EC2 and update Docker container
      - name: Deploy new Docker container on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}       # Elastic IP or static DNS
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ env.DOCKER_USERNAME }}/react-frontend-app:latest
            docker stop frontend || true
            docker rm frontend || true
            docker run -d --name frontend -p 80:80 ${{ env.DOCKER_USERNAME }}/react-frontend-app:latest
